/*
 * Bouncing balls demo - by Martin Savage
 *
 * Here are bouncing balls, animated with QED GUI and coroutine
 * abilities to make the source code short and sweet...
 */

void Ball(CoList coList, int[] pos, int[] delta, int color) {
  void bounce(int index) {
    pos[index] += delta[index];

    if (delta[index] > 0 ? pos[index] >= 100 : pos[index] < 0) {
      pos[index] = delta[index] > 0 ? 200 - pos[index] : -pos[index];
      delta[index] = -delta[index];
    }

    return();
  }

  while(coList.yield()) {
    bounce(0);
    bounce(1);
  } @out("     ") @size(30) @alignx(50) @textcol(0)
} @out(oval()) @bgcol(color) @alignx(pos[0]) @aligny(pos[1])

boolean CounterWidget(int count, int min) {
  void Button(string text, boolean disabled) {
    int color = 0xE0000000; @size(40) @out(text) @alignx(50) @aligny(50) @textcol(0x90000000)
  } @out(rect()) @textwidth(2) @size(40) @bgcol(disabled ? 0x80000000 : color) @onpress(!disabled && (color = 0xA0000000)) @onrelease(!disabled && [(color = 0xE0000000), return()])

  {
    Button decButton = new Button("-", count == min) -> [count > min && count--, decButton.disabled = count == min, return(false)]; @out(decButton)
    {
      ; @out(count) @size(60) @alignx(50) @textcol(0x80000000)
    } @textwidth(3) @size(60)
    Button incButton = new Button("+", false) -> [decButton.disabled = false, count++, return(true)]; @out(incButton)
  } @cdir(1)
} @out(roundrect(30)) @bgcol(0xFFFFFF)

int getdelta(double n) {
  int nx = ((int) (n * 10000)) % 6;

  return(nx - (nx < 3 ? 3 : 2));
}

Ball addNewBall(CoList coList) {
	double rnd1 = rand();
	double rnd2 = rand();

    return (new Ball(coList, new [(int) (rnd1 * 101), (int) (rnd2 * 101)],
                     new [getdelta(rnd1), getdelta(rnd2)], (int) (rnd1 * 0x1000000)));
}

void DisplayBalls(Ball[] balls) {
  balls.size() {
    ; @out(balls[&0]);
  }
}

{
  int count = 0;                 @out("Bouncing") @size(130) @textcol(0x50FFFFFF) @alignx(50) @aligny(10)
  CoList coList = new CoList();  @out("Balls!!") @size(160) @textcol(0x30FFFFFF) @alignx(50) @aligny(70)
  Ball[] balls = new [addNewBall(coList), addNewBall(coList), addNewBall(coList)];
  DisplayBalls display = new DisplayBalls(balls); @out(display)
  CounterWidget counter = new CounterWidget(balls.size(), 0) -> [parm() ? balls.add(addNewBall(coList)) : balls.remove(balls.size() - 1), display = new DisplayBalls(balls), true];
                                 @out(counter) @alignx(95) @aligny(95)
  Timer timer = new Timer(15) -> [coList.process(), timer.reset()];
}     @out(" ") @textwidth(100) @textheight(30) @bgcol(0x404040)
